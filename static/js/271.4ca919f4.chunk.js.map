{"version":3,"file":"static/js/271.4ca919f4.chunk.js","mappings":"2NAGaA,EAAS,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,4BACE,uDACA,kBACEC,KAAK,OACLC,KAAK,SACLC,YAAY,WACZC,SAZe,SAAAC,GACnB,IAAQC,EAAUD,EAAME,OAAhBD,MACRP,GAASS,EAAAA,EAAAA,GAAUF,GACpB,MAaF,E,SCtBYG,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEnBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEpBC,EAAW,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEhBC,EAAY,SAAAP,GAAK,OAAIA,EAAMQ,OAAOA,MAAjB,E,SCDjBC,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOlB,EAAP,KAAamB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAgBMZ,GAAWa,EAAAA,EAAAA,IAAYf,GACvBV,GAAWC,EAAAA,EAAAA,MAEXyB,EAAe,SAAApB,GACnB,IAAMH,EAAOG,EAAMH,KACboB,EAASjB,EAAMiB,QAEyC,IAA1DX,EAASe,WAAU,SAAAC,GAAO,OAAIzB,IAASyB,EAAQzB,IAArB,IAC5B0B,MAAM,GAAD,OAAI1B,EAAJ,6BAELH,GAAS8B,EAAAA,EAAAA,IAAW,CAAE3B,KAAAA,EAAMoB,OAAAA,KAE9BD,EAAQ,IACRE,EAAU,GACX,EAED,OACE,kBAAMO,SArBiB,SAAAzB,GACvBA,EAAM0B,iBACNN,EAAa,CAAEvB,KAAMA,EAAMoB,OAAQA,GACpC,EAkBC,WACE,qCAEE,kBACErB,KAAK,OACLC,KAAK,OACLC,YAAY,iBACZG,MAAOJ,EACPE,SAvCiB,SAAAC,GACvB,IAAQC,EAAUD,EAAME,OAAhBD,MACRe,EAAQf,EACT,EAqCO0B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,uCAEE,kBACEjC,KAAK,MACLC,KAAK,SACLC,YAAY,YACZG,MAAOgB,EACPlB,SA/CmB,SAAAC,GACzB,IAAQC,EAAUD,EAAME,OAAhBD,MACRiB,EAAUjB,EACX,EA6CO0B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQjC,KAAK,SAAb,2BAGL,ECjEYkC,EAAc,WACzB,IAK4BC,EALtBrC,GAAWC,EAAAA,EAAAA,MACXW,GAAWa,EAAAA,EAAAA,IAAYf,GACvBS,GAASM,EAAAA,EAAAA,IAAYP,GAUrBoB,EACJnB,EAAOoB,OAAS,GARUF,EAQclB,EAPjCP,EAASO,QAAO,SAAAS,GAAO,OAC5BA,EAAQzB,KAAKqC,cAAcC,SAASJ,EAAWG,cADnB,KAOoB5B,EAEpD,OACE,wBACG0B,EAAeI,KAAI,SAAAd,GAAO,OACzB,0BACGA,EAAQzB,KADX,KACmByB,EAAQL,QACzB,mBACErB,KAAK,SACLyC,QAAS,kBAAM3C,GAAS4C,EAAAA,EAAAA,IAAchB,EAAQiB,IAArC,EAFX,sBAFOjB,EAAQiB,GADQ,KAahC,EC3Bc,SAASC,IACtB,IAAM9C,GAAWC,EAAAA,EAAAA,MACXc,GAAYU,EAAAA,EAAAA,IAAYX,GACxBG,GAAQQ,EAAAA,EAAAA,IAAYT,GAM1B,OAJA+B,EAAAA,EAAAA,YAAU,WACR/C,GAASgD,EAAAA,EAAAA,MACV,GAAE,CAAChD,KAGF,4BACE,4CACA,SAACoB,EAAD,KAEA,0DACA,4BACE,SAACrB,EAAD,IACCgB,IAAcE,IAAS,mDACxB,SAACmB,EAAD,SAIP,C","sources":["components/Filter.jsx","redux/contacts/selectors.jsx","components/ContactForm.jsx","components/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div>\n      <label>Find contacts by Name </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Angelina\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = event => {\n    const { value } = event.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = event => {\n    const { value } = event.target;\n    setNumber(value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    handleSubmit({ name: name, number: number });\n  };\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    const name = event.name;\n    const number = event.number;\n\n    if (contacts.findIndex(contact => name === contact.name) !== -1) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Angelina Jolie\"\n          value={name}\n          onChange={handleChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"123-45-67\"\n          value={number}\n          onChange={handleChangeNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  // Filtering contacts by name\n  const getFilteredContacts = filterName => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterName.toLowerCase())\n    );\n  };\n\n  // Preparing contacts to render(filtered or all)\n  const contactsToShow =\n    filter.length > 0 ? getFilteredContacts(filter) : contacts;\n\n  return (\n    <ul>\n      {contactsToShow.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}\n          <button\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Filter } from 'components/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading, getError } from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Your phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts from your phonebook</h2>\n      <div>\n        <Filter />\n        {isLoading && !error && <b>Request in progress...</b>}\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n"],"names":["Filter","dispatch","useDispatch","type","name","placeholder","onChange","event","value","target","setFilter","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","ContactForm","useState","setName","number","setNumber","useSelector","handleSubmit","findIndex","contact","alert","addContact","onSubmit","preventDefault","pattern","title","required","ContactList","filterName","contactsToShow","length","toLowerCase","includes","map","onClick","deleteContact","id","App","useEffect","fetchContacts"],"sourceRoot":""}